<div class="pt-48">
  <%= live_render(@conn, TransportWeb.EditDatasetLive,
    session: %{"dataset" => @dataset, "dataset_types" => @dataset_types, "regions" => @regions}
  ) %>

  <%= unless is_nil(@dataset) do %>
    <div class="is-centered mt-48">
      <%= dgettext("backoffice", "Other actions on the dataset") %>
    </div>
    <div class="backoffice_dataset_actions_buttons">
      <div>
        <%= form_for @conn, backoffice_dataset_path(@conn, :import_from_data_gouv_fr, @dataset.id, Map.put(@conn.params, "stay_on_page", true)), [nodiv: true], fn _ -> %>
          <%= submit("Importer", class: "button", nodiv: true) %>
        <% end %>
      </div>

      <div>
        <%= live_render(@conn, TransportWeb.Live.ValidateDatasetView,
          session: %{"dataset_id" => @dataset.id, "locale" => get_session(@conn, :locale)}
        ) %>
      </div>

      <div>
        <%= form_for @conn, backoffice_dataset_path(@conn, :delete, @dataset.id, @conn.params), [nodiv: true], fn _ -> %>
          <%= submit("Supprimer", class: "button", nodiv: true) %>
        <% end %>
      </div>

      <div :if={@dataset.type == "public-transit"}>
        <%= live_render(@conn, TransportWeb.Live.ForceNeTExConversion,
          session: %{"dataset_id" => @dataset.id, "locale" => get_session(@conn, :locale)}
        ) %>
      </div>
    </div>

    <div class="dashboard-description mt-48">
      <h3><%= dgettext("backoffice", "Resource historization") %></h3>

      <%= if Dataset.should_skip_history?(@dataset) do %>
        <p class="notification">
          <%= dgettext("backoffice", "This dataset is not historicized on purpose.") %>
        </p>
      <% else %>
        <% nb_resources = length(@resources_with_history) %>
        <%= dngettext(
          "backoffice",
          "There is %{n} resource in this dataset",
          "There are %{n} resources in this dataset",
          nb_resources,
          n: nb_resources
        ) %>

        <%= if nb_resources > 0 do %>
          <table class="table">
            <tr>
              <th><%= dgettext("backoffice", "Resource") %></th>
              <th><%= dgettext("backoffice", "Last historization") %></th>
            </tr>
            <%= for r <- @resources_with_history do %>
              <tr>
                <td><%= link(r.title, to: resource_path(@conn, :details, r.id)) %></td>
                <td>
                  <%= if r.resource_history == [] do %>
                    ðŸš«
                  <% else %>
                    <%= r.resource_history |> Enum.at(0) |> Map.get(:inserted_at) %>
                  <% end %>
                </td>
              </tr>
            <% end %>
          </table>
        <% end %>
      <% end %>
    </div>

    <div id="notification_subscriptions" class="dashboard-description mt-48">
      <h3>Abonnements aux notifications</h3>

      <h4>CrÃ©er un abonnement</h4>
      <%= form_for @conn, backoffice_notification_subscription_path(@conn, :create), [], fn f -> %>
        <%= hidden_input(f, :redirect_location, value: "dataset") %>
        <%= hidden_input(f, :dataset_id, value: @dataset.id) %>
        <%= label f, :contact_id do %>
          Contact <%= text_input(f, :contact_id, required: true, list: "contacts_datalist", pattern: "[0-9]+") %>
          <div class="small">
            <a href={backoffice_contact_path(@conn, :new)} target="_blank">
              <i class="fas fa-external-link"></i> CrÃ©er un contact
            </a>
          </div>
        <% end %>
        <datalist id="contacts_datalist">
          <%= for contact <- @contacts_datalist do %>
            <option value={contact.id}><%= DB.Contact.display_name(contact) %> (<%= contact.organization %>)</option>
          <% end %>
        </datalist>
        <%= label f, :reasons, class: "pt-12" do %>
          <%= dgettext("backoffice", "Notification reason") %>
          <%= for reason <- DB.NotificationSubscription.reasons_related_to_datasets() do %>
            <%= label f, reason do %>
              <%= checkbox(f, reason, hidden_input: false, value: true) %>
              <%= reason %>
            <% end %>
          <% end %>
        <% end %>

        <%= submit("CrÃ©er un abonnement") %>
      <% end %>
      <h4>Abonnements existants</h4>
      <table :if={Enum.count(@dataset.notification_subscriptions) > 0} class="table">
        <tr>
          <th>Contact</th>
          <th><%= dgettext("backoffice", "Notification reason") %></th>
          <th>Actions</th>
        </tr>
        <%= for {contact, notification_subscriptions} <- @dataset.notification_subscriptions |> Enum.sort_by(&{&1.contact.last_name, &1.reason}) |> Enum.group_by(& &1.contact) do %>
          <%= for {notification_subscription, index} <- Enum.with_index(notification_subscriptions) do %>
            <tr>
              <td :if={index == 0} rowspan={Enum.count(notification_subscriptions)}>
                <a href={backoffice_contact_path(@conn, :edit, contact.id)}>
                  <%= notification_subscription_contact(notification_subscription) %>
                </a>

                <div class="inline-block">
                  <%= form_for @conn, backoffice_notification_subscription_path(@conn, :delete_for_contact_and_dataset, contact.id, @dataset.id), [method: "delete"], fn f -> %>
                    <%= hidden_input(f, :redirect_location, value: "dataset") %>
                    <button class="small button-outline no-border warning" title="dÃ©sabonner entiÃ¨rement">
                      <i class="fa-solid fa-xmark"></i>
                    </button>
                  <% end %>
                </div>
              </td>
              <td><%= notification_subscription.reason %></td>
              <td>
                <%= form_for @conn, backoffice_notification_subscription_path(@conn, :delete, notification_subscription.id), [method: "delete"], fn f -> %>
                  <%= hidden_input(f, :redirect_location, value: "dataset") %>
                  <button class="small button-outline no-border warning">
                    <i class="fas fa-trash"></i>
                  </button>
                <% end %>
              </td>
            </tr>
          <% end %>
        <% end %>
      </table>
      <p :if={Enum.empty?(@dataset.notification_subscriptions)} class="mt-48 notification">
        Il n'y a pas d'abonnements Ã  des notifications pour ce jeu de donnÃ©es.
      </p>
      <div :if={Enum.count(@dataset.notification_subscriptions) > 0}>
        <%= live_render(@conn, TransportWeb.Live.SendNowOnNAPNotificationView,
          session: %{
            "dataset_id" => @dataset.id,
            "locale" => get_session(@conn, :locale),
            "sent_reasons" =>
              @notifications_sent |> Enum.map(fn {{reason, _datetime}, _emails} -> reason end) |> Enum.uniq()
          }
        ) %>
      </div>
    </div>
    <div :if={Enum.count(@notifications_sent) > 0} class="dashboard-description mt-48">
      <h3><%= dgettext("backoffice", "Notifications sent") %></h3>

      <p>
        <%= dgettext("backoffice", "Notifications sent in the last %{nb_days} days.",
          nb_days: @notifications_last_nb_days
        ) %>
      </p>
      <table class="table">
        <tr>
          <th><%= dgettext("backoffice", "Notification reason") %></th>
          <th><%= dgettext("backoffice", "Datetime") %></th>
          <th><%= dgettext("backoffice", "Emails") %></th>
        </tr>
        <%= for {{reason, datetime}, emails} <- @notifications_sent do %>
          <tr>
            <td lang="en"><%= reason %></td>
            <td><%= Shared.DateTimeDisplay.format_datetime_to_paris(datetime, "fr") %></td>
            <td><%= emails |> Enum.sort() |> Enum.join(", ") %></td>
          </tr>
        <% end %>
      </table>
    </div>
    <div class="dataset_import_validations_logs" id="imports_history">
      <h3><%= dgettext("backoffice", "Imports history") %></h3>
      <table>
        <tr>
          <th><%= dgettext("backoffice", "date / time") %></th>
          <th><%= dgettext("backoffice", "success") %></th>
          <th><%= dgettext("backoffice", "error message") %></th>
        </tr>
        <%= for row <- @import_logs do %>
          <tr>
            <td><%= row.timestamp %></td>
            <td><%= if row.is_success, do: "âœ”", else: "" %></td>
            <td><%= row.error_msg %></td>
          </tr>
        <% end %>
      </table>
    </div>
  <% end %>
</div>
<div class="pt-48"></div>
<script src={static_path(@conn, "/js/app.js")} />
