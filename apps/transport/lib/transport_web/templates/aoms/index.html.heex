<h2>Situation des AOM pour l’ouverture des données transport en commun</h2>
<div class="is-centered">
  <a class="button" href={aoms_path(@conn, :csv)} role="link">
    <i class="icon icon--download" aria-hidden="true"></i> Télécharger en CSV
  </a>
</div>
<table class="table aom_table unsorted">
  <tr>
    <th>Nom</th>
    <th>Département</th>
    <th>Région</th>
    <th>Publié</th>
    <th>Publié dans un aggrégat</th>
    <th>À jour</th>
    <th>Temps réel</th>
    <th>Population</th>
    <th>Commune principale</th>
    <th>Nombre de communes</th>
  </tr>
  <%= for aom <- @aoms do %>
    <tr>
      <td><%= aom.nom %></td>
      <td><%= aom.departement %></td>
      <td><%= aom.region %></td>
      <td><%= format_bool(aom.published) %></td>
      <td><%= format_bool(aom.in_aggregate) %></td>
      <td><%= format_bool(aom.up_to_date) %></td>
      <td><%= format_bool(aom.has_realtime) %></td>
      <td><%= aom.population_muni_2014 %></td>
      <td><%= aom.nom_commune %> (<%= aom.insee_commune_principale %>)</td>
      <td><%= aom.nombre_communes %></td>
    </tr>
  <% end %>
</table>
<script>
  const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;

  const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
      v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
      )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

  // do the work...
  document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
      const table = th.closest('table');
      table.querySelectorAll('th').forEach(th => th.className = '')
      th.className = !this.asc ? 'asc' : 'desc'
      const header_index = Array.from(th.parentNode.children).indexOf(th);

      Array.from(table.querySelectorAll('tr:nth-child(n+2)'))
          .sort(comparer(header_index, this.asc = !this.asc))
          .forEach(tr => table.appendChild(tr) );
  })));
</script>
